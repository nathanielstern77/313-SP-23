let img;

let trail = [];

let xoff = 0;
let yoff = 0;
let inc = 0.01;


function preload() {
  // Load an image from a file
  img = loadImage('sworl.jpg');
}

function setup() {
  createCanvas(600, 600);
}
  function runner(){
   noStroke();
  image(img, 0, 0); // Draw the loaded image onto the canvas
  loadPixels(); // Load the pixel data of the canvas into an array
  for (let i = 0; i < pixels.length; i += 4) {
    let r = pixels[i]; // Get the red value of the current pixel
    let g = pixels[i + 1]; // Get the green value of the current pixel
    let b = pixels[i + 2]; // Get the blue value of the current pixel
    // Modify the pixel values to create a "twisted" effect
    pixels[i] = g;
    pixels[i + 1] = b;
    pixels[i + 2
          
          ] = r;
  }
  updatePixels(); // Update the canvas with the modified pixel data
}

function yelp(){
   // Add the current mouse position to the trail
    strokeWeight(10);
  stroke(255, 50);
  trail.push(createVector(mouseX, mouseY));
  
  // Remove the oldest position from the trail
  if (trail.length > 50) {
    trail.shift();
  }
  
  // Draw the trail as a series of connected points
  beginShape();
  for (let i = 0; i < trail.length; i++) {
    let pos = trail[i];
    vertex(pos.x, pos.y);
  }
  endShape();
  
  // Create a glowing effect by drawing smaller, semi-transparent lines
  for (let i = 0; i < trail.length - 1; i++) {
    let pos1 = trail[i];
    let pos2 = trail[i + 1];
    
    let distance = dist(pos1.x, pos1.y, pos2.x, pos2.y);
    let alpha = map(distance, 0, 50, 255, 0);
    
    stroke(255, alpha);
    line(pos1.x, pos1.y, pos2.x, pos2.y);
    noFill()
  }
}

function draw() {
 
  
// background(0);
  noStroke()
//blendMode(OVERLAY)
   
    clear()
  runner()
   
  for (let x = 0; x < width; x += 10) {
    for (let y = 0; y < height; y += 10) {
      let noiseVal = noise(xoff + x * inc, yoff + y * inc) * 255;
squareColor = color (noiseVal, 10, 150)
//      fill(noiseVal);
  squareColor.setAlpha(128+128 * sin(millis() / 5000));
      fill (squareColor)
      rect(x, y, 10, 10);
push()
       yelp()    
      pop()
    }
  }

  xoff += 0.01;
  yoff += 0.01;
}





